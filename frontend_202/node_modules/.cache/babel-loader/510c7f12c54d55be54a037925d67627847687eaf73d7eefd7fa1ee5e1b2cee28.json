{"ast":null,"code":"var _jsxFileName = \"/Users/charan/PycharmProjects/nodejs/frontend/src/AdminMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    duration: '',\n    release_date: ''\n  });\n\n  // On component mount, fetch the list of all movies\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const response = await axios.get('http://localhost:5001/admin/movies');\n        setMovies(response.data.movies);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    }\n    fetchMovies();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMovie(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleAddMovie = async () => {\n    try {\n      await axios.post('http://localhost:5001/admin/add-movie', newMovie);\n      // Refresh the list of movies after adding a new one\n      const response = await axios.get('http://localhost:5001/admin/movies');\n      setMovies(response.data.movies);\n    } catch (error) {\n      console.error('Error adding movie:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"Movie Title\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          placeholder: \"Movie Description\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"duration\",\n          placeholder: \"Duration (in mins)\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"release_date\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddMovie,\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"List of Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboard, \"8LwXAWzNML2KNUTdODjVJpOjoc0=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","movies","setMovies","newMovie","setNewMovie","title","description","duration","release_date","fetchMovies","response","get","data","error","console","handleInputChange","e","name","value","target","prevState","handleAddMovie","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","movie","id","_c","$RefreshReg$"],"sources":["/Users/charan/PycharmProjects/nodejs/frontend/src/AdminMovie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction AdminDashboard() {\n    const [movies, setMovies] = useState([]);\n    const [newMovie, setNewMovie] = useState({ title: '', description: '', duration: '', release_date: '' });\n\n    // On component mount, fetch the list of all movies\n    useEffect(() => {\n        async function fetchMovies() {\n            try {\n                const response = await axios.get('http://localhost:5001/admin/movies');\n                setMovies(response.data.movies);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        }\n\n        fetchMovies();\n    }, []);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewMovie(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const handleAddMovie = async () => {\n        try {\n            await axios.post('http://localhost:5001/admin/add-movie', newMovie);\n            // Refresh the list of movies after adding a new one\n            const response = await axios.get('http://localhost:5001/admin/movies');\n            setMovies(response.data.movies);\n        } catch (error) {\n            console.error('Error adding movie:', error);\n        }\n    };\n\n    return (\n        <div className=\"admin-dashboard\">\n            <h2>Movie Management</h2>\n            <div className=\"section\">\n                {/* Display a form to add a new movie */}\n                <div>\n                    <input type=\"text\" name=\"title\" placeholder=\"Movie Title\" onChange={handleInputChange} />\n                    <textarea name=\"description\" placeholder=\"Movie Description\" onChange={handleInputChange}></textarea>\n                    <input type=\"number\" name=\"duration\" placeholder=\"Duration (in mins)\" onChange={handleInputChange} />\n                    <input type=\"date\" name=\"release_date\" onChange={handleInputChange} />\n                    <button onClick={handleAddMovie}>Add Movie</button>\n                </div>\n\n                <h3>List of Movies</h3>\n                {/* Display a list of movies */}\n                {movies.map(movie => (\n                    <div key={movie.id}>\n                        <h4>{movie.title}</h4>\n                        <p>{movie.description}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default AdminDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}